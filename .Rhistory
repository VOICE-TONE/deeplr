library(deeplr)
?content
?fromJSON
devtools::use_readme_rmd()
install.packages("devtools")
devtools::use_readme_rmd()
library(translateR)
data(enron)
translate(dataset = enron,
column.name = "email")
data(translateR::enron)
library(translateR)
library(deeplr
)
dat <- c("The neighbour's dog is barking.", "My neighbour is speaking.")
translate(dataset = dat)
dat <- c("The neighbour's dog is barking.", "The birds are singing in the trees.")
translate(dataset = dat)
dat <- c("The only way to find out what happens when a complex system is disturbed, is to disturb the system, not merely observe it passively.",
"The whole problem with the world is that fools and fanatics are always so certain of themselves, but wiser people are so full of doubts.")
translate(dataset = dat)
?translate
library(deeplr)
?translate
library(deeplr)
?translate
library(deeplr)
?translate
dat <- "Essentially, all models are wrong, but some are useful."
translate(dataset = dat)
dat <- c("The only way to find out what happens when a complex system is disturbed, is to disturb the system, not merely observe it passively.",
"The whole problem with the world is that fools and fanatics are always so certain of themselves, but wiser people are so full of doubts.")
translate(dataset = dat)
library(translateR)
data(enron)
translate(dataset = enron,
column.name = "email")
library(deeplr)
install.packages("svMisc")
library(deeplr)
dat <- c("The only way to find out what happens when a complex system is disturbed, is to disturb the system, not merely observe it passively.",
"The whole problem with the world is that fools and fanatics are always so certain of themselves, but wiser people are so full of doubts.")
translate(dataset = dat)
?progress
library(deeplr)
?translate
dat <- c("The only way to find out what happens when a complex system is disturbed, is to disturb the system, not merely observe it passively.",
"The whole problem with the world is that fools and fanatics are always so certain of themselves, but wiser people are so full of doubts.")
translate(dataset = dat)
library(deeplr)
dat <- c("The only way to find out what happens when a complex system is disturbed, is to disturb the system, not merely observe it passively.",
"The whole problem with the world is that fools and fanatics are always so certain of themselves, but wiser people are so full of doubts.")
translate(dataset = dat)
library(translateR)
data(enron)
translate(dataset = enron,
column.name = "email")
?progress
library(deeplr)
?translate
library(translateR)
data(enron)
translate(dataset = enron,
column.name = "email")
dat <- c("The only way to find out what happens when a complex system is disturbed, is to disturb the system, not merely observe it passively.",
"The whole problem with the world is that fools and fanatics are always so certain of themselves, but wiser people are so full of doubts.")
translate(dataset = dat)
cat(x, sep="\n\n")
library(deeplr)
library(translateR)
data(enron)
translate(dataset = enron,
column.name = "email")
?progress
library(deeplr)
?translate
library(translateR)
data(enron)
translate(dataset = enron, column.name = "email")
dat <- c("The only way to find out what happens when a complex system is disturbed, is to disturb the system",
"The whole problem with the world is that fools and fanatics are always so certain of themselves")
translate(dataset = dat, source.lang = "EN", target.lang = "ES")
library(deeplr)
library(deeplr)
library(deeplr)
?translate
library(translateR)
data(enron)
translate(dataset = enron, column.name = "email")
swiss$country <- rownames(swiss)
swiss
translate(dataset = swiss, column.name = "country")
translate(dataset = swiss, column.name = "country", source.lang = "FR", target.lang = "EN")
library(deeplr)
devtools::install_github("paulcbauer/deeplr")
library(deeplr)
library(deeplr)
library(deeplr)
library(translateR)
data(enron)
translate(dataset = enron,
column.name = "email")
library(tm)
devtools::install_github("paulcbauer/deeplr")
dat <- "Essentially, all models are wrong, but some are useful."
dat
translate(dataset = dat)
library(deeplr)
translate(dataset = dat)
translate(dataset = dat)
dat <- c("The only way to find out what happens when a complex system is disturbed, is to disturb the system",
"The whole problem with the world is that fools and fanatics are always so certain of themselves")
dat
translate(dataset = dat, source.lang = "EN", target.lang = "ES")
library(tm)
data("acq")
acq
View(acq)
dataframe(acq)
library("translateR", lib.loc="C:/Program Files/R/R-3.4.3/library")
detach("package:translateR", unload=TRUE)
enron
library(translateR)
data(enron)
detach("package:translateR")
dat <- data.frame(text = "The only way to find out what happens when a complex system is disturbed, is to disturb the system",
"The whole problem with the world is that fools and fanatics are always so certain of themselves")
translate(dataset = dat, column.name = "text", source.lang = "EN", target.lang = "ES")
dat <- data.frame(text = c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves"))
translate(dataset = dat, column.name = "text", source.lang = "EN", target.lang = "ES")
library(deeplr)
library(deeplr)
library(deeplr)
library(deeplr)
# Translate a single string
dat <- "Essentially, all models are wrong, but some are useful"
translate(dataset = dat)
# Translate a character vector
dat <- c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves")
translate(dataset = dat)
# Translate a column in a dataframe
dat <- data.frame(text = c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves"))
translate(dataset = dat, column.name = "text", source.lang = "EN", target.lang = "ES")
x <-   translate(dataset = dat, column.name = "text", source.lang = "EN", target.lang = "ES")
class(x)
View(x)
translate(dataset = dat, column.name = "text", source.lang = "EN", target.lang = "ES")
x <- translate(dataset = dat, column.name = "text", source.lang = "EN", target.lang = "ES")
x
library(deeplr)
dat <- c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves")
translate(dataset = dat)
x <-   translate(dataset = dat)
x
dat <- data.frame(text = c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves"))
translate(dataset = dat, column.name = "text", source.lang = "EN", target.lang = "ES")
x <-   translate(dataset = dat, column.name = "text", source.lang = "EN", target.lang = "ES")
x
class(x)
dat <- c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves")
translate(dataset = dat)
x <-   translate(dataset = dat)
class(x)
library(deeplr)
library(deeplr)
devtools::install_github("paulcbauer/deeplr")
# Load the package
library(deeplr)
dat <- data.frame(text = c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves"))
translate(dataset = dat, column.name = "text", source.lang = "EN", target.lang = "ES")
dat <- c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves")
translate(dataset = dat)
x <- translate(dataset = dat)
x
x
library(deeplr)
dat <- "Essentially, all models are wrong, but some are useful"
translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")
library(deeplr)
translate
dat <- "Essentially, all models are wrong, but some are useful"
translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")
dataset
dataset = dat
source.lang = "EN"
target.lang = "DE"
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb"
inherits(dataset,"character")==TRUE&length(dataset)==1
response <- GET(paste(url,
dataset,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
paste(url,
dataset,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = "")
dataset
i <- dataset
i
stringr::str_replace(gsub("\\s+", "%20", stringr::str_trim(i)), "B", "b")
i <- stringr::str_replace(gsub("\\s+", "%20", stringr::str_trim(i)), "B", "b")
response <- GET(paste(url,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
i
url
url = "https://api.deepl.com/v1/translate?text="
i <- dataset
# i <- stringr::str_replace(gsub("\\s+", "%20", stringr::str_trim(i)), "B", "b")
response <- GET(paste(url,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
respcontent <- httr::content(response, as="text", encoding = "UTF-8")
return(jsonlite::fromJSON(respcontent)$translations$text)
httr::content(response, as="text", encoding = "UTF-8")
i <- dataset
i <- stringr::str_replace(gsub("\\s+", "%20", stringr::str_trim(i)), "B", "b")
response <- GET(paste(url,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
httr::content(response, as="text", encoding = "UTF-8")
translate <- function(dataset = NULL,
column.name = NULL,
source.lang = "DE",
target.lang = "EN",
auth_key = NULL,
url = "https://api.deepl.com/v1/translate?text="
) {
if(is.null(auth_key)){cat("You need an API key. See https://www.deepl.com/api-contact.html.")}else{
# INPUT: Character vector of length 1 ####
if(inherits(dataset,"character")==TRUE&length(dataset)==1){
i <- dataset
i <- stringr::str_replace(gsub("\\s+", "%20", stringr::str_trim(i)), "B", "b")
response <- GET(paste(url,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
respcontent <- httr::content(response, as="text", encoding = "UTF-8")
return(jsonlite::fromJSON(respcontent)$translations$text)
}
# INPUT: Character vector of length > 1 ####
if(inherits(dataset,"character")==TRUE&length(dataset)>1){
responses <- NULL
z <- 0
for(i in dataset){
svMisc::progress(z, max.value = length(dataset))
z <- z+1
i <- stringr::str_replace(gsub("\\s+", "%20", stringr::str_trim(i)), "B", "b")
response.i <- GET(paste(url,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
respcontent.i <- httr::content(response.i, as="text", encoding = "UTF-8")
result.i <- jsonlite::fromJSON(respcontent.i)$translations$text
responses <- c(responses, result.i)
}
return(responses)
}
# INPUT: Dataframe with text in column ####
if(inherits(dataset,"data.frame")==TRUE&!is.null(column.name)){
dataset2 <- dataset %>% dplyr::pull(column.name) %>% as.character()
responses <- NULL
z <- 0
for(i in dataset2){
svMisc::progress(z, max.value = length(dataset2))
z <- z+1
i <- stringr::str_replace(gsub("\\s+", " ", stringr::str_trim(i)), "B", "b")
response.i <- GET(paste(url,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
respcontent.i <- httr::content(response.i, as="text", encoding = "UTF-8")
result.i <- jsonlite::fromJSON(respcontent.i)$translations$text
responses <- c(responses, result.i)
}
dataset <- cbind(dataset, translation = responses)
return(dataset)
}
if(inherits(dataset,"data.frame")==TRUE&is.null(column.name)){cat("If input is a data.frame you have to specify a column name, e.g. translate(dataset = dat, column.name = 'text'.")}
}
} # End of function
dat <- "Essentially, all models are wrong, but some are useful"
translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")
dat <- c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves")
dat <- "Essentially, all models are wrong, but some are useful"
translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")
dat
dat <- "Essentially, all models are wrong, but some are useful"
translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")  dat <- c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves")
dat <- c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves")
translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")
dat <- data.frame(text = c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves"))
translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")
dat <- data.frame(text = c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves"))
translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")
translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")
dat <- data.frame(text = c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves"))
translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
column.name = "text",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")
dat <- data.frame(text = c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves"))
translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
column.name = "text",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")
dat <- c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves")
translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")
dat <- data.frame(text = c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves"))
dat
inherits(dataset,"data.frame")==TRUE&!is.null(column.name)
source.lang = "EN"
target.lang = "DE"
column.name = "text"
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb"
inherits(dataset,"data.frame")==TRUE&!is.null(column.name)
column.name = "text"
inherits(dataset,"data.frame")==TRUE&!is.null(column.name)
column.name
!is.null(column.name)
inherits(dataset,"data.frame")==TRUE
dataset = dat
dataset
class(dataset)
inherits(dataset,"data.frame")==TRUE&!is.null(column.name)
dataset2 <- dataset %>% dplyr::pull(column.name) %>% as.character()
dataset2
responses <- NULL
z <- 0
svMisc::progress(z, max.value = length(dataset2))
z <- z+1
dataset
dataset2
i <- "The only way to find out what happens is to disturb the system"
i <- stringr::str_replace(gsub("\\s+", " ", stringr::str_trim(i)), "B", "b")
i
response.i <- GET(paste(url,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
respcontent.i <- httr::content(response.i, as="text", encoding = "UTF-8")
respcontent.i
paste(url,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = "")
translate <- function(dataset = NULL,
column.name = NULL,
source.lang = "DE",
target.lang = "EN",
auth_key = NULL,
url = "https://api.deepl.com/v1/translate?text="
) {
if(is.null(auth_key)){cat("You need an API key. See https://www.deepl.com/api-contact.html.")}else{
# INPUT: Character vector of length 1 ####
if(inherits(dataset,"character")==TRUE&length(dataset)==1){
i <- dataset
i <- stringr::str_replace(gsub("\\s+", "%20", stringr::str_trim(i)), "B", "b")
response <- GET(paste(url,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
respcontent <- httr::content(response, as="text", encoding = "UTF-8")
return(jsonlite::fromJSON(respcontent)$translations$text)
}
# INPUT: Character vector of length > 1 ####
if(inherits(dataset,"character")==TRUE&length(dataset)>1){
responses <- NULL
z <- 0
for(i in dataset){
svMisc::progress(z, max.value = length(dataset))
z <- z+1
i <- stringr::str_replace(gsub("\\s+", "%20", stringr::str_trim(i)), "B", "b")
response.i <- GET(paste(url,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
respcontent.i <- httr::content(response.i, as="text", encoding = "UTF-8")
result.i <- jsonlite::fromJSON(respcontent.i)$translations$text
responses <- c(responses, result.i)
}
return(responses)
}
# INPUT: Dataframe with text in column ####
if(inherits(dataset,"data.frame")==TRUE&!is.null(column.name)){
dataset2 <- dataset %>% dplyr::pull(column.name) %>% as.character()
responses <- NULL
z <- 0
for(i in dataset2){
svMisc::progress(z, max.value = length(dataset2))
z <- z+1
i <- stringr::str_replace(gsub("\\s+", "%20", stringr::str_trim(i)), "B", "b")
response.i <- GET(paste(url,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
respcontent.i <- httr::content(response.i, as="text", encoding = "UTF-8")
result.i <- jsonlite::fromJSON(respcontent.i)$translations$text
responses <- c(responses, result.i)
}
dataset <- cbind(dataset, translation = responses)
return(dataset)
}
if(inherits(dataset,"data.frame")==TRUE&is.null(column.name)){cat("If input is a data.frame you have to specify a column name, e.g. translate(dataset = dat, column.name = 'text'.")}
}
} # End of function
dat <- data.frame(text = c("The only way to find out what happens is to disturb the system",
"The whole problem with the world is that fools are always so certain of themselves"))
translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
column.name = "text",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")
result <-   translate(dataset = dat,
source.lang = "EN",
target.lang = "DE",
column.name = "text",
auth_key = "bfabc1c0-1e96-54f8-3ddf-8eab4dc1bbbb")
result
